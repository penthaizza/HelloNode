version: 2
jobs:
  build:
    docker:
      - image: node:8.9.4-alpine
    steps:
      - checkout
      - run:
          name: Add Dependencies
          command: apk add --no-cache curl
      - run:
          name: Install & Build Project luna-site
          command: cd luna-site && yarn install && yarn build
      # - run:
      #     name: Install & Build project luna-api
      #     command: cd luna-api && yarn install && yarn build
      - run: 
          name: Test Project
          command: echo "This Test Space"
      - setup_remote_docker: 
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.12.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run: 
          name: Build and Push Docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t penthaizza/lunaproject:site-$(git rev-parse --short HEAD) ./luna-site
            docker tag penthaizza/lunaproject:site-$(git rev-parse --short HEAD) penthaizza/lunaproject:site-latest
            # docker build -t penthaizza/lunaproject:$API_TAG ./luna-api
            docker push penthaizza/lunaproject
            # docker push penthaizza/lunaproject:$API_TAG
  deploy-to-dev:
    machine: true
    steps:
      - run: 
          name: Deploy to Dev-Site-Server
          command: | 
            sudo apt-get update
            sudo apt-get install sshpass
            sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$SERVER_HOST "ls -a && sudo docker rm luna-site-test && sudo docker run -d -p 3010:3000 --name luna-site-test penthaizza/lunaproject:site-$(git rev-parse --short HEAD)"
      # - run:
      #     name: Deploy to Dev-API-Server
      #     command: sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$SERVER_HOST "ls -a && sudo docker stop luna-api && sudo docker rm luna-api && sudo docker rmi penthaizza/lunaproject:$API_TAG && sudo docker pull penthaizza/lunaproject:$API_TAG && sudo docker run -d -p 3001:4000 -e "NODE_ENV=development" --name luna-api penthaizza/lunaproject:$API_TAG"
  # deploy-to-prod:
  #   machine: true
  #   steps:
  #     - run: 
  #         name: Deploy to Prod-Site-Server
  #         command: | 
  #           sudo apt-get update
  #           sudo apt-get install sshpass
  #           sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$SERVER_HOST "ls -a && sudo docker stop luna-site && sudo docker rm luna-site && sudo docker rmi penthaizza/lunaproject:$SITE_TAG && sudo docker pull penthaizza/lunaproject:$SITE_TAG && sudo docker run -d -p 3000:3000 --name luna-site penthaizza/lunaproject:$SITE_TAG"
  #     - run:
      #     name: Deploy to Prod-API-Server
      #     command: sudo sshpass -p $PASS_SERVER ssh -o StrictHostKeyChecking=no $USER_SERVER@$SERVER_HOST "ls -a && sudo docker stop luna-api && sudo docker rm luna-api && sudo docker rmi penthaizza/lunaproject:$API_TAG && sudo docker pull penthaizza/lunaproject:$API_TAG && sudo docker run -d -p 3001:4000 -e "NODE_ENV=development" --name luna-api penthaizza/lunaproject:$API_TAG"
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - deploy-to-dev:
          requires:
            - build
      # - deploy-to-prod:
      #     requires:
      #       - deploy-to-dev
      #     filters:
      #       branches:
      #           only: master